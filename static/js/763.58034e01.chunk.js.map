{"version":3,"file":"static/js/763.58034e01.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm .js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/App/App.module.css?583a","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook_form\":\"ContactForm_phonebook_form__9rWCe\",\"phonebook_label\":\"ContactForm_phonebook_label__No5Cw\",\"phonebook_btn\":\"ContactForm_phonebook_btn__hhsRf\"};","import { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const name = useRef();\n  const number = useRef();\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contactForAdd = {\n      name: name.current.value,\n      phone: number.current.value,\n    };\n\n    if (isInPhoneBook(contactForAdd.name)) {\n      window.alert(`${contactForAdd.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(contactForAdd));\n\n    reset();\n  };\n\n  function isInPhoneBook(name) {\n    const normalizedName = name.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === normalizedName);\n  }\n\n  const reset = () => {\n    name.current.value = '';\n    number.current.value = '';\n  };\n\n  return (\n    <div className={css.phonebook_form}>\n      <form type=\"submit\" onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId} className={css.phonebook_label}>\n          Name\n          <input\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            ref={name}\n          />\n        </label>\n        <label htmlFor={numberInputId} className={css.phonebook_label}>\n          Number\n          <input\n            id={numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            ref={number}\n          />\n        </label>\n        <button type=\"submit\" className={css.phonebook_btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_label\":\"Filter_filter_label__5ITod\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => dispatch(setFilter(evt.currentTarget.value));\n  return (\n    <>\n      <label className={css.filter_label}>\n        Find contacts by name\n        <input type=\"text\" onChange={changeFilter} />\n      </label>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_list\":\"ContactList_contact_list__tnyRS\",\"contact_item\":\"ContactList_contact_item__MaQF6\",\"contact_text\":\"ContactList_contact_text__jpqWe\",\"contact_delbtn\":\"ContactList_contact_delbtn__wev9x\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => dispatch(deleteContact(contactId));\n\n  return (\n    <div>\n      <ul className={css.contact_list}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={css.contact_item}>\n            <p className={css.contact_text}>\n              {name} {number}\n            </p>\n            <button\n              className={css.contact_delbtn}\n              type=\"button\"\n              onClick={onDeleteContact.bind(this, id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook_header\":\"App_phonebook_header__dOTxc\",\"contacts_header\":\"App_contacts_header__Zp4jz\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm ';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport css from 'components/App/App.module.css';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className={css.phonebook_header}>Phonebook</h1>\n      <ContactForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h2 className={css.contacts_header}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","value","selectFilter","contact","name","toLowerCase","includes","ContactForm","useRef","number","nameInputId","nanoid","numberInputId","useSelector","dispatch","useDispatch","reset","current","className","css","type","onSubmit","evt","preventDefault","contactForAdd","phone","normalizedName","find","isInPhoneBook","addContact","window","alert","htmlFor","id","pattern","title","required","ref","Filter","onChange","setFilter","currentTarget","ContactList","onDeleteContact","contactId","deleteContact","map","onClick","bind","Contacts","useEffect","fetchContacts"],"sourceRoot":""}